name: Compile examples

on:
  push:
    paths-ignore:
      - '.github/workflows/cpp_lint.yml'
      - '.github/workflows/compile_library.yml'
  pull_request:
    paths-ignore:
      - '.github/workflows/cpp_lint.yml'
      - '.github/workflows/compile_library.yml'

jobs:
  esp8266:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        example: 
        - "examples/advanced/EventScheduler/EventScheduler.ino"
        - "examples/echoBot/echoBot.ino"
        - "examples/keyboardCallback/keyboardCallback.ino"
        - "examples/keyboards/keyboards.ino"
        - "examples/lightBot/lightBot.ino"
        - "examples/sendPhoto/sendPhoto.ino"

        - "examples/ESP8266/OTA_password/OTA_password.ino"
        - "examples/ESP8266/OTA_buttonQuery/OTA_buttonQuery.ino"

    steps:
    - uses: actions/checkout@v2
    - name: Cache pip
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: ${{ runner.os }}-pip-
    - name: Cache PlatformIO
      uses: actions/cache@v2
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
    - name: Set up Python
      uses: actions/setup-python@v2
    - name: Install PlatformIO
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade platformio
    - name: Install 3rd party dependecies
      run: | 
        pio lib -g install \
        https://github.com/cotestatnt/AsyncTelegram2/
        
    - name: Run PlatformIO Examples
      run: |
        pio ci --board=nodemcuv2 \
        --lib=examples/advanced/EventScheduler/**.h
      env:
        PLATFORMIO_CI_SRC: ${{ matrix.example }}

  esp32:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        example: 
        - "examples/advanced/EventScheduler"
        - "examples/echoBot/echoBot.ino"
        - "examples/keyboardCallback/keyboardCallback.ino"
        - "examples/keyboards/keyboards.ino"
        - "examples/lightBot/lightBot.ino"
        - "examples/sendPhoto/sendPhoto.ino"

        - "examples/ESP32/ESP32-CAM/ESP32-CAM.ino"
        - "examples/ESP32/ESP32-CAM-adv/ESP32-CAM-adv.ino"
    steps:
    - uses: actions/checkout@v2
    - name: Cache pip
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: ${{ runner.os }}-pip-
    - name: Cache PlatformIO
      uses: actions/cache@v2
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
    - name: Set up Python
      uses: actions/setup-python@v2
    - name: Install PlatformIO
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade platformio
    - name: Install 3rd party dependecies
      run: | 
        pio lib -g install \
        https://github.com/cotestatnt/AsyncTelegram2 \
        https://github.com/OPEnSLab-OSU/SSLClient

    - name: Run PlatformIO Examples
      run: |
        pio ci --board=lolin32 \
        --lib=examples/advanced/EventScheduler/**.h \
        --lib=examples/ESP32/ESP32-CAM-adv/**.h \
        --lib=examples/Ethernet/**.h

      env:
        PLATFORMIO_CI_SRC: ${{ matrix.example }}

#  arduino:
#    runs-on: ubuntu-latest
#    strategy:
#      fail-fast: false
#      matrix:
#        example:
#        - "examples/Ethernet/Ethernet.ino"
#
#    steps:
#    - uses: actions/checkout@v2
#    - name: Cache pip
#      uses: actions/cache@v2
#      with:
#        path: ~/.cache/pip
#        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
#        restore-keys: ${{ runner.os }}-pip-
#    - name: Cache PlatformIO
#      uses: actions/cache@v2
#      with:
#        path: ~/.platformio
#        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
#    - name: Set up Python
#      uses: actions/setup-python@v2
#    - name: Install PlatformIO
#      run: |
#        python -m pip install --upgrade pip
#        pip install --upgrade platformio
#    - name: Install 3rd party dependecies
#      run: |
#        pio lib -g install \
#        https://github.com/cotestatnt/AsyncTelegram2 \
#        https://github.com/arduino-libraries/Ethernet \
#        https://github.com/OPEnSLab-OSU/SSLClient \
#        https://github.com/SGSSGene/StandardCplusplus
#
#    - name: Run PlatformIO Examples
#      run: |
#        pio ci --board=nano_33_iot \
#        --lib=examples/Ethernet/**.h
#      env:
#        PLATFORMIO_CI_SRC: ${{ matrix.example }}

